
// export const uploadImage = async ({
//   image,
//   isAuthor = false,
// }: {
//   image: File;
//   isAuthor: boolean;
// }): Promise<string> => {
//   try {
//     const data = imageValidator.parse(image);

//     await checkNudity(data);

//     const fileBuffer = Buffer.from(await data.arrayBuffer());
//     const readableStream = Readable.from(fileBuffer);

//     return new Promise((resolve, reject) => {
//       const uploadStream = cloudinary.uploader.upload_stream(
//         {
//           folder: !isAuthor ? "nextblog/blogs" : "nextblog/authors",
//           allowed_formats: ["jpeg", "png", "webp"],
//           format: "webp",
//           invalidate: true,
//           transformation: !isAuthor
//             ? [{ aspect_ratio: "16:9", crop: "fill", gravity: "center" }]
//             : [
//                 {
//                   width: 300,
//                   height: 300,
//                   aspect_ratio: "1:1",
//                   crop: "fill",
//                   gravity: "face:auto",
//                 },
//               ],
//         },
//         (error, result) => {
//           if (error || !result) {
//             return reject(new Error("Failed to upload image"));
//           }
//           return resolve(result.secure_url);
//         }
//       );

//       readableStream.pipe(uploadStream);
//     });
//   } catch (error) {
//     if (error instanceof ZodError) {
//       throw new Error(getFirstZodError(error));
//     } else if (error instanceof Error) {
//       throw new Error(error.message);
//     }
//     throw new Error("Something went wrong");
//   }
// };
